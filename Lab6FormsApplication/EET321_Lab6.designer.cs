#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab6FormsApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EET321_Lab6_S16")]
	public partial class EET321_Lab6DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTable_1(Table_1 instance);
    partial void UpdateTable_1(Table_1 instance);
    partial void DeleteTable_1(Table_1 instance);
    partial void InsertTable_Resistance(Table_Resistance instance);
    partial void UpdateTable_Resistance(Table_Resistance instance);
    partial void DeleteTable_Resistance(Table_Resistance instance);
    #endregion
		
		public EET321_Lab6DataContext() : 
				base(global::Lab6FormsApplication.Properties.Settings.Default.EET321_Lab6_S16ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EET321_Lab6DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EET321_Lab6DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EET321_Lab6DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EET321_Lab6DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table_1> Table_1s
		{
			get
			{
				return this.GetTable<Table_1>();
			}
		}
		
		public System.Data.Linq.Table<Table_Resistance> Table_Resistances
		{
			get
			{
				return this.GetTable<Table_Resistance>();
			}
		}
		
		public System.Data.Linq.Table<Table2> Table2s
		{
			get
			{
				return this.GetTable<Table2>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_1")]
	public partial class Table_1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateTime;
		
		private char _GroupID;
		
		private string _BoardID;
		
		private int _Step;
		
		private System.Nullable<float> _Capacitance;
		
		private float _OnTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnGroupIDChanging(char value);
    partial void OnGroupIDChanged();
    partial void OnBoardIDChanging(string value);
    partial void OnBoardIDChanged();
    partial void OnStepChanging(int value);
    partial void OnStepChanged();
    partial void OnCapacitanceChanging(System.Nullable<float> value);
    partial void OnCapacitanceChanged();
    partial void OnOnTimeChanging(float value);
    partial void OnOnTimeChanged();
    #endregion
		
		public Table_1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Step", DbType="Int NOT NULL")]
		public int Step
		{
			get
			{
				return this._Step;
			}
			set
			{
				if ((this._Step != value))
				{
					this.OnStepChanging(value);
					this.SendPropertyChanging();
					this._Step = value;
					this.SendPropertyChanged("Step");
					this.OnStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacitance", DbType="Real")]
		public System.Nullable<float> Capacitance
		{
			get
			{
				return this._Capacitance;
			}
			set
			{
				if ((this._Capacitance != value))
				{
					this.OnCapacitanceChanging(value);
					this.SendPropertyChanging();
					this._Capacitance = value;
					this.SendPropertyChanged("Capacitance");
					this.OnCapacitanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnTime", DbType="Real NOT NULL")]
		public float OnTime
		{
			get
			{
				return this._OnTime;
			}
			set
			{
				if ((this._OnTime != value))
				{
					this.OnOnTimeChanging(value);
					this.SendPropertyChanging();
					this._OnTime = value;
					this.SendPropertyChanged("OnTime");
					this.OnOnTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Resistance")]
	public partial class Table_Resistance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateTime;
		
		private char _GroupID;
		
		private string _BoardID;
		
		private double _Resistance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnGroupIDChanging(char value);
    partial void OnGroupIDChanged();
    partial void OnBoardIDChanging(string value);
    partial void OnBoardIDChanged();
    partial void OnResistanceChanging(double value);
    partial void OnResistanceChanged();
    #endregion
		
		public Table_Resistance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resistance", DbType="Float NOT NULL")]
		public double Resistance
		{
			get
			{
				return this._Resistance;
			}
			set
			{
				if ((this._Resistance != value))
				{
					this.OnResistanceChanging(value);
					this.SendPropertyChanging();
					this._Resistance = value;
					this.SendPropertyChanged("Resistance");
					this.OnResistanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table2")]
	public partial class Table2
	{
		
		private System.DateTime _DateTime;
		
		private System.Nullable<char> _GroupID;
		
		private string _BoardID;
		
		private float _MeasMinOnTime;
		
		private float _MeasMaxOnTime;
		
		private float _MeasureMinResistance;
		
		private float _MeasureMaxResistance;
		
		public Table2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NChar(1)")]
		public System.Nullable<char> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this._BoardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasMinOnTime", DbType="Real NOT NULL")]
		public float MeasMinOnTime
		{
			get
			{
				return this._MeasMinOnTime;
			}
			set
			{
				if ((this._MeasMinOnTime != value))
				{
					this._MeasMinOnTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasMaxOnTime", DbType="Real NOT NULL")]
		public float MeasMaxOnTime
		{
			get
			{
				return this._MeasMaxOnTime;
			}
			set
			{
				if ((this._MeasMaxOnTime != value))
				{
					this._MeasMaxOnTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureMinResistance", DbType="Real NOT NULL")]
		public float MeasureMinResistance
		{
			get
			{
				return this._MeasureMinResistance;
			}
			set
			{
				if ((this._MeasureMinResistance != value))
				{
					this._MeasureMinResistance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureMaxResistance", DbType="Real NOT NULL")]
		public float MeasureMaxResistance
		{
			get
			{
				return this._MeasureMaxResistance;
			}
			set
			{
				if ((this._MeasureMaxResistance != value))
				{
					this._MeasureMaxResistance = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
