#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab6FormsApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EET321_Lab6_S16")]
	public partial class EET321_Lab6DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTable_2(Table_2 instance);
    partial void UpdateTable_2(Table_2 instance);
    partial void DeleteTable_2(Table_2 instance);
    partial void InsertTable_1(Table_1 instance);
    partial void UpdateTable_1(Table_1 instance);
    partial void DeleteTable_1(Table_1 instance);
    partial void InsertTable_Resistance(Table_Resistance instance);
    partial void UpdateTable_Resistance(Table_Resistance instance);
    partial void DeleteTable_Resistance(Table_Resistance instance);
    #endregion
		
		public EET321_Lab6DataContext() : 
				base(global::Lab6FormsApplication.Properties.Settings.Default.EET321_Lab6_S16ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EET321_Lab6DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EET321_Lab6DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EET321_Lab6DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EET321_Lab6DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table_2> Table_2s
		{
			get
			{
				return this.GetTable<Table_2>();
			}
		}
		
		public System.Data.Linq.Table<Table_1> Table_1s
		{
			get
			{
				return this.GetTable<Table_1>();
			}
		}
		
		public System.Data.Linq.Table<Table_Resistance> Table_Resistances
		{
			get
			{
				return this.GetTable<Table_Resistance>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_2")]
	public partial class Table_2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateTime;
		
		private char _GroupID;
		
		private string _BoardID;
		
		private float _MinOnTime;
		
		private float _MaxOnTime;
		
		private float _MinTimeResistance;
		
		private float _MaxTimeResistance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnGroupIDChanging(char value);
    partial void OnGroupIDChanged();
    partial void OnBoardIDChanging(string value);
    partial void OnBoardIDChanged();
    partial void OnMinOnTimeChanging(float value);
    partial void OnMinOnTimeChanged();
    partial void OnMaxOnTimeChanging(float value);
    partial void OnMaxOnTimeChanged();
    partial void OnMinTimeResistanceChanging(float value);
    partial void OnMinTimeResistanceChanged();
    partial void OnMaxTimeResistanceChanging(float value);
    partial void OnMaxTimeResistanceChanged();
    #endregion
		
		public Table_2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOnTime", DbType="Real NOT NULL")]
		public float MinOnTime
		{
			get
			{
				return this._MinOnTime;
			}
			set
			{
				if ((this._MinOnTime != value))
				{
					this.OnMinOnTimeChanging(value);
					this.SendPropertyChanging();
					this._MinOnTime = value;
					this.SendPropertyChanged("MinOnTime");
					this.OnMinOnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOnTime", DbType="Real NOT NULL")]
		public float MaxOnTime
		{
			get
			{
				return this._MaxOnTime;
			}
			set
			{
				if ((this._MaxOnTime != value))
				{
					this.OnMaxOnTimeChanging(value);
					this.SendPropertyChanging();
					this._MaxOnTime = value;
					this.SendPropertyChanged("MaxOnTime");
					this.OnMaxOnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTimeResistance", DbType="Real NOT NULL")]
		public float MinTimeResistance
		{
			get
			{
				return this._MinTimeResistance;
			}
			set
			{
				if ((this._MinTimeResistance != value))
				{
					this.OnMinTimeResistanceChanging(value);
					this.SendPropertyChanging();
					this._MinTimeResistance = value;
					this.SendPropertyChanged("MinTimeResistance");
					this.OnMinTimeResistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTimeResistance", DbType="Real NOT NULL")]
		public float MaxTimeResistance
		{
			get
			{
				return this._MaxTimeResistance;
			}
			set
			{
				if ((this._MaxTimeResistance != value))
				{
					this.OnMaxTimeResistanceChanging(value);
					this.SendPropertyChanging();
					this._MaxTimeResistance = value;
					this.SendPropertyChanged("MaxTimeResistance");
					this.OnMaxTimeResistanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_1")]
	public partial class Table_1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateTime;
		
		private char _GroupID;
		
		private string _BoardID;
		
		private int _Step;
		
		private System.Nullable<float> _Capacitance;
		
		private float _OnTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnGroupIDChanging(char value);
    partial void OnGroupIDChanged();
    partial void OnBoardIDChanging(string value);
    partial void OnBoardIDChanged();
    partial void OnStepChanging(int value);
    partial void OnStepChanged();
    partial void OnCapacitanceChanging(System.Nullable<float> value);
    partial void OnCapacitanceChanged();
    partial void OnOnTimeChanging(float value);
    partial void OnOnTimeChanged();
    #endregion
		
		public Table_1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Step", DbType="Int NOT NULL")]
		public int Step
		{
			get
			{
				return this._Step;
			}
			set
			{
				if ((this._Step != value))
				{
					this.OnStepChanging(value);
					this.SendPropertyChanging();
					this._Step = value;
					this.SendPropertyChanged("Step");
					this.OnStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacitance", DbType="Real")]
		public System.Nullable<float> Capacitance
		{
			get
			{
				return this._Capacitance;
			}
			set
			{
				if ((this._Capacitance != value))
				{
					this.OnCapacitanceChanging(value);
					this.SendPropertyChanging();
					this._Capacitance = value;
					this.SendPropertyChanged("Capacitance");
					this.OnCapacitanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnTime", DbType="Real NOT NULL")]
		public float OnTime
		{
			get
			{
				return this._OnTime;
			}
			set
			{
				if ((this._OnTime != value))
				{
					this.OnOnTimeChanging(value);
					this.SendPropertyChanging();
					this._OnTime = value;
					this.SendPropertyChanged("OnTime");
					this.OnOnTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Resistance")]
	public partial class Table_Resistance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateTime;
		
		private char _GroupID;
		
		private string _BoardID;
		
		private double _Resistance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnGroupIDChanging(char value);
    partial void OnGroupIDChanged();
    partial void OnBoardIDChanging(string value);
    partial void OnBoardIDChanged();
    partial void OnResistanceChanging(double value);
    partial void OnResistanceChanged();
    #endregion
		
		public Table_Resistance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resistance", DbType="Float NOT NULL")]
		public double Resistance
		{
			get
			{
				return this._Resistance;
			}
			set
			{
				if ((this._Resistance != value))
				{
					this.OnResistanceChanging(value);
					this.SendPropertyChanging();
					this._Resistance = value;
					this.SendPropertyChanged("Resistance");
					this.OnResistanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
